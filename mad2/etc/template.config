fasta:
  filetype: fasta
  x:
    index:
      command: 'samtools faidx {{ fullpath }}'
      description: 'Create bam index'
fastq:
  filetype: fastq
  x:
    compress:
      description: 'Compress with fqz-comp'
      url: 'http://sourceforge.net/projects/fqzcomp/'
      defaults:
        output: "{{ basename|re_sub('.f(ast)?q$', '.fqz') }}"
      command: |
        fqz_comp "{{ fullpath }}" "{{ output }}"
bam:
  filetype: bam
  x:
    decompress: &bam_decompress
      description: 'convert Bam to Sam'
      run_when: '"{{fullpath}}" -nt "{{output}}"'
      defaults:
        output: "{{ basename|re_sub('.bam$', '.sam') }}"
      annotate:
        createdWith: "Samtools $(samtools 2>&1 | grep Version)"
      command: |
        samtools view -h {{ fullpath }} > {{ output }}
    sam:
      << bam_decompress
    stats:
      description: 'run flagstats'
      defaults:
        output: "{{ basename|re_sub('.sam$', '.flagstat') }}"
      annotate:
        createdWith: "Samtools $(samtools 2>&1 | grep Version)"
      command: |
        samtools flagstat {{ fullpath }} > {{ output }}

sam:
  filetype: sam
  x:
    compress:
      description: 'Convert to Bam'
      defaults:
        output: "{{ basename|re_sub('.sam$', '.bam') }}"
      annotate:
        createdWith: "Samtools $(samtools 2>&1 | grep Version)"
      command: |
        samtools view -Sb {{ fullpath }} > {{ output }}
vcf:
  filetype: vcf
bcf:
  filetype: bcf
bowtiedb:
  filetype: bowtiedb
  category: db
bzip2:
  compression: bz2
gz:
  compression: gz
zip:
  compression: zip
fqz:
  compression: fqz-comp
  filetype: fastq
raw:
  category: raw
  keep: 120
  backup: true
other:
  category: other
  keep: 12
  backup: false
intermediate:
  category: intermediate
  keep: 6
  backup: false
result:
  category: result
  keep: 120
  backup: true
db:
  category: db
  keep: 60
  backup: false
trash:
  category: trash
  keep: 2
  backup: false
